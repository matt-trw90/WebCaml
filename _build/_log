### Starting build.
# Target: parse.mli.depends, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), extension:mli, file:parse.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package graphics -package curl -package str -package csv -modules parse.mli > parse.mli.depends # cached
# Target: parse.cmi, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), byte, compile, extension:mli, file:parse.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package graphics -package curl -package str -package csv -o parse.cmi parse.mli # cached
# Target: parse.ml.depends, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), extension:ml, file:parse.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package graphics -package curl -package str -package csv -modules parse.ml > parse.ml.depends # cached
# Target: parse.cmo, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), byte, compile, extension:cmo, extension:ml, file:parse.cmo, file:parse.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package graphics -package curl -package str -package csv -o parse.cmo parse.ml # cached
# Target: similarity.mli.depends, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), extension:mli, file:similarity.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package graphics -package curl -package str -package csv -modules similarity.mli > similarity.mli.depends # cached
# Target: similarity.cmi, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), byte, compile, extension:mli, file:similarity.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package graphics -package curl -package str -package csv -o similarity.cmi similarity.mli # cached
# Target: similarity.ml.depends, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), extension:ml, file:similarity.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package graphics -package curl -package str -package csv -modules similarity.ml > similarity.ml.depends # cached
# Target: similarity.cmo, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), byte, compile, extension:cmo, extension:ml, file:similarity.cmo, file:similarity.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package graphics -package curl -package str -package csv -o similarity.cmo similarity.ml # cached
# Target: webgrab.mli.depends, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), extension:mli, file:webgrab.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package graphics -package curl -package str -package csv -modules webgrab.mli > webgrab.mli.depends # cached
# Target: webgrab.cmi, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), byte, compile, extension:mli, file:webgrab.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package graphics -package curl -package str -package csv -o webgrab.cmi webgrab.mli # cached
# Target: webgrab.ml.depends, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), extension:ml, file:webgrab.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package graphics -package curl -package str -package csv -modules webgrab.ml > webgrab.ml.depends # cached
# Target: webgrab.cmo, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), byte, compile, extension:cmo, extension:ml, file:webgrab.cmo, file:webgrab.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package graphics -package curl -package str -package csv -o webgrab.cmo webgrab.ml # cached
# Target: style.mli.depends, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), extension:mli, file:style.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package graphics -package curl -package str -package csv -modules style.mli > style.mli.depends # cached
# Target: style.cmi, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), byte, compile, extension:mli, file:style.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package graphics -package curl -package str -package csv -o style.cmi style.mli # cached
# Target: style.ml.depends, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), extension:ml, file:style.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package graphics -package curl -package str -package csv -modules style.ml > style.ml.depends # cached
# Target: style.cmo, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), byte, compile, extension:cmo, extension:ml, file:style.cmo, file:style.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package graphics -package curl -package str -package csv -o style.cmo style.ml # cached
# Target: main.mli.depends, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), extension:mli, file:main.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package graphics -package curl -package str -package csv -modules main.mli > main.mli.depends # cached
# Target: main.cmi, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), byte, compile, extension:mli, file:main.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package graphics -package curl -package str -package csv -o main.cmi main.mli # cached
# Target: main.ml.depends, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package graphics -package curl -package str -package csv -modules main.ml > main.ml.depends # cached
# Target: gui.mli.depends, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), extension:mli, file:gui.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package graphics -package curl -package str -package csv -modules gui.mli > gui.mli.depends # cached
# Target: gui.cmi, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), byte, compile, extension:mli, file:gui.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package graphics -package curl -package str -package csv -o gui.cmi gui.mli # cached
# Target: saved.mli.depends, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), extension:mli, file:saved.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package graphics -package curl -package str -package csv -modules saved.mli > saved.mli.depends # cached
# Target: saved.cmi, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), byte, compile, extension:mli, file:saved.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package graphics -package curl -package str -package csv -o saved.cmi saved.mli # cached
# Target: main.cmo, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package graphics -package curl -package str -package csv -o main.cmo main.ml # cached
# Target: gui.ml.depends, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), extension:ml, file:gui.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package graphics -package curl -package str -package csv -modules gui.ml > gui.ml.depends # cached
# Target: gui.cmo, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), byte, compile, extension:cmo, extension:ml, file:gui.cmo, file:gui.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package graphics -package curl -package str -package csv -o gui.cmo gui.ml # cached
# Target: saved.ml.depends, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), extension:ml, file:saved.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package graphics -package curl -package str -package csv -modules saved.ml > saved.ml.depends # cached
# Target: saved.cmo, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), byte, compile, extension:cmo, extension:ml, file:saved.cmo, file:saved.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package graphics -package curl -package str -package csv -o saved.cmo saved.ml # cached
# Target: main.byte, tags: { package(csv), package(curl), package(graphics), package(ounit2), package(str), package(yojson), byte, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -package ounit2 -package yojson -package graphics -package curl -package str -package csv parse.cmo similarity.cmo style.cmo webgrab.cmo gui.cmo saved.cmo main.cmo -o main.byte # cached
# Compilation successful.
